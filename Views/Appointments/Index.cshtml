@model IEnumerable<MVCRealEstate.Models.Appointment>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
	ViewData["Title"] = "Rendez-vous";
}
@functions {
	public string GetAntiXsrfRequestToken()
	{
		return Xsrf.GetAndStoreTokens(Context).RequestToken;
	}
}


<section class="intro-single" style="padding:20px 0;">
	<div class="container">
		<div class="row">
			<div class="col-md-12 col-lg-8">
				<div class="title-single-box">
					<h1 class="title-single">Vos rendez-vous</h1>
				</div>
			</div>
		</div>
	</div>
</section>

@if (Model.Count() == 0)
{
	<div>Vous n'avez aucun rendez-vous pour l'instant</div>
}


<section class="section-agents">
	<div class="container">
		<div class="row" style="height:300px;">
			@foreach (var item in Model)
			{
				<div class="col-md-4" style="height:inherit;">
					<div class="card-box-d" style="height:inherit;">
						<div class="card-img-d">
							<img src="~/medias/property-1.jpg" alt="" class="img-d img-fluid">
						</div>
						<div class="card-overlay card-overlay-hover">
							<div class="card-header-d">
								<div class="card-title-d align-self-center">
									<h3 class="title-d">
										@Html.DisplayFor(model => item.Period)
									</h3>
								</div>
							</div>
							<div class="card-body-d">
								<p class="content-d color-text-a">
									@Html.DisplayFor(modelItem => item.Offer.Location.Address) - @Html.DisplayFor(modelItem => item.Offer.Location.City) <br>@Html.DisplayFor(modelItem => item.Offer.Reference)
								</p>
								<div class="info-agents color-a">
									<p>
										<strong>Contact: </strong> @Html.DisplayFor(modelItem => item.Offer.OwnerInfo.Phones[0])
									</p>
									<p>
										<strong>Email: </strong> @Html.DisplayFor(modelItem => item.Offer.OwnerInfo.Email)
									</p>
								</div>
							</div>
							<div class="card-footer-d">
								<div class="socials-footer d-flex justify-content-center">
									<ul class="list-inline">
										<li class="list-inline-item">
											<button class="btn btn-danger" onclick="cancelAppointment(@item.AppointmentId)">
												<i class="fa fa-trash" aria-hidden="true"></i>
												@Html.AntiForgeryToken()
											</button>
										</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</section>

<script>
	function getAntiForgeryToken() {
		return document.querySelector('input[name="__RequestVerificationToken"]').value;
	}
	function cancelAppointment(appointmentId) {
		const antiForgeryToken = getAntiForgeryToken();
		fetch('/Appointments/CancelAppointment/' + appointmentId, {
			method: 'PATCH',
			headers: {
				'Content-Type': 'application/json',
				'RequestVerificationToken': antiForgeryToken
			},
		}).then(response => {
			if (response.ok) {
				window.location.href = '/Appointments';
			} else {
				console.error('Failed to cancel appointment');
			}
		}).catch(error => console.error('Error:', error));
	}
</script>
